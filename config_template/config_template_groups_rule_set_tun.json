{
  "log": {
    "disabled": false,
    "level": "info",
    "output": "",
    "timestamp": true
  },
  "experimental": {
    "clash_api": {
      "external_controller": "0.0.0.0:20123",
      "external_ui": "ui",
      "secret": "",
      "default_mode": "rule",
      "external_ui_download_url": "https://ghfast.top/https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip",
      "external_ui_download_detour": "🎯 全球直连",
      "access_control_allow_origin": [
        "http://127.0.0.1",
        "http://localhost",
        "https://yacd.metacubex.one",
        "https://d.metacubex.one",
        "https://board.zash.run.place"
      ]
    },
    "cache_file": {
      "enabled": true,
      "path": "cache.db",
      "store_fakeip": true
    }
  },
  "dns": {
    "fakeip": {
      "enabled": true,
      "inet4_range": "198.18.0.0/15",
      "inet6_range": "fc00::/18"
    },
    "servers": [
      {
        "tag": "local",
        "address": "local",
        "detour": "🎯 全球直连"
      },
      {
        "tag": "DIRECT-DNS",
        "address_resolver": "local",
        "address": "https://dns.alidns.com/dns-query",
        "detour": "🎯 全球直连"
      },
      {
        "tag": "PROXY-DNS",
        "address_resolver": "local",
        "address": "https://dns.google/dns-query",
        "detour": "Proxy"
      },
      {
        "tag": "FAKEIP-DNS",
        "address": "fakeip"
      }
    ],
    "rules": [
      {
        "outbound": "any",
        "server": "DIRECT-DNS"
      },
      {
        "clash_mode": "direct",
        "server": "DIRECT-DNS"
      },
      {
        "clash_mode": "global",
        "server": "PROXY-DNS"
      },
      {
        "rule_set": [
          "geosite-cn",
          "geosite-private"
        ],
        "server": "DIRECT-DNS"
      },
      {
        "query_type": [
          "A",
          "AAAA"
        ],
        "server": "FAKEIP-DNS",
        "rewrite_ttl": 1
      }
    ],
    "disable_cache": true,
    "disable_expire": true,
    "independent_cache": true,
    "final": "PROXY-DNS",
    "strategy": "prefer_ipv4"
  },
  "inbounds": [
    {
      "tag": "tun-in",
      "type": "tun",
      "address": [
        "172.19.0.0/30"
      ],
      "mtu": 9000,
      "auto_route": true,
      "strict_route": true,
      "stack": "system",
      "platform": {
        "http_proxy": {
          "enabled": true,
          "server": "127.0.0.1",
          "server_port": 2080
        }
      }
    },
    {
      "tag": "mixed-in",
      "type": "mixed",
      "listen": "127.0.0.1",
      "listen_port": 2080
    }
  ],
  "outbounds": [
    {
      "tag": "🇨🇳 全局直连",
      "type": "direct"
    },
    {
      "tag": "🚫 拒绝连接",
      "type": "block"
    },
    {
      "tag": "Proxy",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "♻️ 自动选择",
        "🌵 手动选择",
        "🇭🇰 香港自动",
        "🇹🇼 台湾自动",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动",
        "🇺🇸 美国自动",
        "🇬🇧 英国自动",
        "🇦🇩 安道尔自动",
        "🇦🇪 阿联酋自动",
        "🇦🇫 阿富汗自动",
        "🇦🇬 安提瓜和巴布达自动",
        "🇦🇮 安圭拉自动",
        "🇦🇱 阿尔巴尼亚自动",
        "🇦🇲 亚美尼亚自动",
        "🇦🇴 安哥拉自动",
        "🇦🇷 阿根廷自动",
        "🇦🇸 美属萨摩亚自动",
        "🇦🇹 奥地利自动",
        "🇦🇺 澳大利亚自动",
        "🇦🇼 阿鲁巴自动",
        "🇦🇽 奥兰群岛自动",
        "🇦🇿 阿塞拜疆自动",
        "🇧🇦 波斯尼亚和黑塞哥维那自动",
        "🇧🇧 巴巴多斯自动",
        "🇧🇩 孟加拉国自动",
        "🇧🇪 比利时自动",
        "🇧🇫 布基纳法索自动",
        "🇧🇬 保加利亚自动",
        "🇧🇭 巴林自动",
        "🇧🇮 布隆迪自动",
        "🇧🇯 贝宁自动",
        "🇧🇱 法属圣巴泰勒米自动",
        "🇧🇲 百慕大自动",
        "🇧🇳 文莱达鲁萨兰国自动",
        "🇧🇴 玻利维亚自动",
        "🇧🇶 博内尔、圣尤斯特歇斯和萨巴自动",
        "🇧🇷 巴西自动",
        "🇧🇸 巴哈马自动",
        "🇧🇹 不丹自动",
        "🇧🇼 博茨瓦纳自动",
        "🇧🇾 白俄罗斯自动",
        "🇧🇿 伯利兹自动",
        "🇨🇦 加拿大自动",
        "🇨🇩 刚果民主共和国自动",
        "🇨🇫 中非共和国自动",
        "🇨🇬 刚果自动",
        "🇨🇭 瑞士自动",
        "🇨🇮 科特迪瓦自动",
        "🇨🇰 库克群岛自动",
        "🇨🇱 智利自动",
        "🇨🇲 喀麦隆自动",
        "🇨🇳 中国自动",
        "🇨🇴 哥伦比亚自动",
        "🇨🇷 哥斯达黎加自动",
        "🇨🇺 古巴自动",
        "🇨🇻 佛得角自动",
        "🇨🇼 库拉索自动",
        "🇨🇾 塞浦路斯自动",
        "🇨🇿 捷克自动",
        "🇩🇪 德国自动",
        "🇩🇯 吉布提自动",
        "🇩🇰 丹麦自动",
        "🇩🇲 多米尼克自动",
        "🇩🇴 多米尼加共和国自动",
        "🇩🇿 阿尔及利亚自动",
        "🇪🇨 厄瓜多尔自动",
        "🇪🇪 爱沙尼亚自动",
        "🇪🇬 埃及自动",
        "🇪🇷 厄立特里亚自动",
        "🇪🇸 西班牙自动",
        "🇪🇹 埃塞俄比亚自动",
        "🇪🇺 欧洲联盟自动",
        "🇫🇮 芬兰自动",
        "🇫🇯 斐济自动",
        "🇫🇰 福克兰群岛自动",
        "🇫🇲 密克罗尼西亚联邦自动",
        "🇫🇴 法罗群岛自动",
        "🇫🇷 法国自动",
        "🇬🇦 加蓬自动",
        "🇬🇩 格林纳达自动",
        "🇬🇪 格鲁吉亚自动",
        "🇬🇫 法属圭亚那自动",
        "🇬🇬 格恩西岛自动",
        "🇬🇭 加纳自动",
        "🇬🇮 直布罗陀自动",
        "🇬🇱 格陵兰自动",
        "🇬🇲 冈比亚自动",
        "🇬🇳 几内亚自动",
        "🇬🇵 瓜德罗普自动",
        "🇬🇶 赤道几内亚自动",
        "🇬🇷 希腊自动",
        "🇬🇹 危地马拉自动",
        "🇬🇺 关岛自动",
        "🇬🇼 几内亚比绍自动",
        "🇬🇾 圭亚那自动",
        "🇭🇳 洪都拉斯自动",
        "🇭🇷 克罗地亚自动",
        "🇭🇹 海地自动",
        "🇭🇺 匈牙利自动",
        "🇮🇩 印度尼西亚自动",
        "🇮🇪 爱尔兰自动",
        "🇮🇱 以色列自动",
        "🇮🇲 曼岛自动",
        "🇮🇳 印度自动",
        "🇮🇴 英属印度洋领地自动",
        "🇮🇶 伊拉克自动",
        "🇮🇷 伊朗自动",
        "🇮🇸 冰岛自动",
        "🇮🇹 意大利自动",
        "🇯🇪 泽西岛自动",
        "🇯🇲 牙买加自动",
        "🇯🇴 约旦自动",
        "🇰🇪 肯尼亚自动",
        "🇰🇬 吉尔吉斯斯坦自动",
        "🇰🇭 柬埔寨自动",
        "🇰🇮 基里巴斯自动",
        "🇰🇲 科摩罗自动",
        "🇰🇳 圣基茨和尼维斯自动",
        "🇰🇵 朝鲜自动",
        "🇰🇷 韩国自动",
        "🇰🇼 科威特自动",
        "🇰🇾 开曼群岛自动",
        "🇰🇿 哈萨克斯坦自动",
        "🇱🇦 老挝自动",
        "🇱🇧 黎巴嫩自动",
        "🇱🇨 圣卢西亚自动",
        "🇱🇮 列支敦士登自动",
        "🇱🇰 斯里兰卡自动",
        "🇱🇷 利比里亚自动",
        "🇱🇸 莱索托自动",
        "🇱🇹 立陶宛自动",
        "🇱🇺 卢森堡自动",
        "🇱🇻 拉脱维亚自动",
        "🇱🇾 利比亚自动",
        "🇲🇦 摩洛哥自动",
        "🇲🇨 摩纳哥自动",
        "🇲🇩 摩尔多瓦自动",
        "🇲🇪 黑山自动",
        "🇲🇫 圣马丁（法属）自动",
        "🇲🇬 马达加斯加自动",
        "🇲🇭 马绍尔群岛自动",
        "🇲🇰 北马其顿自动",
        "🇲🇱 马里自动",
        "🇲🇲 缅甸自动",
        "🇲🇳 蒙古自动",
        "🇲🇴 澳门自动",
        "🇲🇵 北马里亚纳群岛自动",
        "🇲🇶 马提尼克自动",
        "🇲🇷 毛里塔尼亚自动",
        "🇲🇸 蒙特塞拉特自动",
        "🇲🇹 马耳他自动",
        "🇲🇺 毛里求斯自动",
        "🇲🇻 马尔代夫自动",
        "🇲🇼 马拉维自动",
        "🇲🇽 墨西哥自动",
        "🇲🇾 马来西亚自动",
        "🇲🇿 莫桑比克自动",
        "🇳🇦 纳米比亚自动",
        "🇳🇨 新喀里多尼亚自动",
        "🇳🇪 尼日尔自动",
        "🇳🇫 诺福克岛自动",
        "🇳🇬 尼日利亚自动",
        "🇳🇮 尼加拉瓜自动",
        "🇳🇱 荷兰自动",
        "🇳🇴 挪威自动",
        "🇳🇵 尼泊尔自动",
        "🇳🇷 瑙鲁自动",
        "🇳🇺 纽埃自动",
        "🇳🇿 新西兰自动",
        "🇴🇲 阿曼自动",
        "🇵🇦 巴拿马自动",
        "🇵🇪 秘鲁自动",
        "🇵🇫 法属波利尼西亚自动",
        "🇵🇬 巴布亚新几内亚自动",
        "🇵🇭 菲律宾自动",
        "🇵🇰 巴基斯坦自动",
        "🇵🇱 波兰自动",
        "🇵🇲 圣皮埃尔和密克隆自动",
        "🇵🇷 波多黎各自动",
        "🇵🇸 巴勒斯坦自动",
        "🇵🇹 葡萄牙自动",
        "🇵🇼 帕劳自动",
        "🇵🇾 巴拉圭自动",
        "🇶🇦 卡塔尔自动",
        "🇷🇪 留尼汪自动",
        "🇷🇴 罗马尼亚自动",
        "🇷🇸 塞尔维亚自动",
        "🇷🇺 俄罗斯自动",
        "🇷🇼 卢旺达自动",
        "🇸🇦 沙特阿拉伯自动",
        "🇸🇧 所罗门群岛自动",
        "🇸🇨 塞舌尔自动",
        "🇸🇩 苏丹自动",
        "🇸🇪 瑞典自动",
        "🇸🇮 斯洛文尼亚自动",
        "🇸🇰 斯洛伐克自动",
        "🇸🇱 塞拉利昂自动",
        "🇸🇲 圣马力诺自动",
        "🇸🇳 塞内加尔自动",
        "🇸🇴 索马里自动",
        "🇸🇷 苏里南自动",
        "🇸🇸 南苏丹自动",
        "🇸🇹 圣多美和普林西比自动",
        "🇸🇻 萨尔瓦多自动",
        "🇸🇽 荷属圣马丁自动",
        "🇸🇾 叙利亚自动",
        "🇸🇿 斯威士兰自动",
        "🇹🇨 特克斯和凯科斯群岛自动",
        "🇹🇩 乍得自动",
        "🇹🇬 多哥自动",
        "🇹🇭 泰国自动",
        "🇹🇯 塔吉克斯坦自动",
        "🇹🇰 托克劳自动",
        "🇹🇱 东帝汶自动",
        "🇹🇲 土库曼斯坦自动",
        "🇹🇳 突尼斯自动",
        "🇹🇴 汤加自动",
        "🇹🇷 土耳其自动",
        "🇹🇹 特立尼达和多巴哥自动",
        "🇹🇻 图瓦卢自动",
        "🇹🇿 坦桑尼亚自动",
        "🇺🇦 乌克兰自动",
        "🇺🇬 乌干达自动",
        "🇺🇾 乌拉圭自动",
        "🇺🇿 乌兹别克斯坦自动",
        "🇻🇦 梵蒂冈自动",
        "🇻🇨 圣文森特和格林纳丁斯自动",
        "🇻🇪 委内瑞拉自动",
        "🇻🇬 英属维尔京群岛自动",
        "🇻🇮 美属维尔京群岛自动",
        "🇻🇳 越南自动",
        "🇻🇺 瓦努阿图自动",
        "🇼🇫 瓦利斯和富图纳自动",
        "🇼🇸 萨摩亚自动",
        "🇾🇪 也门自动",
        "🇾🇹 马约特自动",
        "🇿🇦 南非自动",
        "🇿🇲 赞比亚自动",
        "🇿🇼 津巴布韦自动"
      ]
    },
    {
      "tag": "🌵 手动选择",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [],
      "filter": [
        {
          "action": "all",
          "keywords": [
            ""
          ]
        }
      ]
    },
    {
      "tag": "🎯 全球直连",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "🇨🇳 全局直连",
        "Proxy"
      ],
      "default": "🇨🇳 全局直连"
    },
    {
      "tag": "🔈 广告拦截",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "🚫 拒绝连接",
        "🇨🇳 全局直连"
      ],
      "default": "🚫 拒绝连接"
    },
    {
      "tag": "💧 泄漏拦截",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "🚫 拒绝连接",
        "Proxy"
      ],
      "default": "🚫 拒绝连接"
    },
    {
      "tag": "🔎 HttpDNS",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "🚫 拒绝连接",
        "Proxy"
      ],
      "default": "🚫 拒绝连接"
    },
    {
      "tag": "🤖 AI",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇺🇸 美国自动",
        "🇯🇵 日本自动",
        "🇸🇬 新加坡自动",
        "🇭🇰 香港自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "📲 Telegram",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇸🇬 新加坡自动",
        "🇭🇰 香港自动",
        "🇯🇵 日本自动",
        "🇺🇸 美国自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "🎥 TikTok",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动",
        "🇺🇸 美国自动",
        "🇹🇼 台湾自动"
      ],
      "default": "🇸🇬 新加坡自动"
    },
    {
      "tag": "📺 YouTube",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇭🇰 香港自动",
        "🇹🇼 台湾自动",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动",
        "🇺🇸 美国自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "🎵 Spotify",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇭🇰 香港自动",
        "🇹🇼 台湾自动",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动"
      ],
      "default": "🇭🇰 香港自动"
    },
    {
      "tag": "🌵 Line",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇯🇵 日本自动",
        "🇹🇼 台湾自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "📹 Netflix",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇭🇰 香港自动",
        "🇹🇼 台湾自动",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "🔍 Google",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🇭🇰 香港自动",
        "🇹🇼 台湾自动",
        "🇸🇬 新加坡自动",
        "🇯🇵 日本自动",
        "🇺🇸 美国自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "📖 Microsoft",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🎯 全球直连",
        "🇺🇸 美国自动",
        "🇸🇬 新加坡自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "🍎 Apple",
      "type": "selector",
      "interrupt_exist_connections": true,
      "outbounds": [
        "Proxy",
        "🎯 全球直连",
        "🇭🇰 香港自动",
        "🇺🇸 美国自动"
      ],
      "default": "Proxy"
    },
    {
      "tag": "♻️ 自动选择",
      "type": "urltest",
      "interrupt_exist_connections": true,
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "all",
          "keywords": [
            ""
          ]
        }
      ]
    },
    {
      "tag": "🇭🇰 香港自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇭🇰|\\bHK\\b|香港|Hong Kong|HongKong"
          ]
        }
      ]
    },
    {
      "tag": "🇹🇼 台湾自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇹🇼|\\bTW\\b|台湾|Taiwan|Tai wan"
          ]
        }
      ]
    },
    {
      "tag": "🇸🇬 新加坡自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇸🇬|\\bSG\\b|新加坡|Singapore"
          ]
        }
      ]
    },
    {
      "tag": "🇯🇵 日本自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇯🇵|\\bJP\\b|日本|Japan"
          ]
        }
      ]
    },
    {
      "tag": "🇰🇷 韩国自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇰🇷|\\bKR\\b|韩国|Korea, Republic of"
          ]
        }
      ]
    },
    {
      "tag": "🇺🇸 美国自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇺🇸|\\bUS\\b|美国|United States|\\bCT\\b|UnitedStates"
          ]
        }
      ]
    },
    {
      "tag": "🇬🇧 英国自动",
      "type": "urltest",
      "url": "https://www.gstatic.com/generate_204",
      "interval": "3m",
      "tolerance": 150,
      "outbounds": [],
      "filter": [
        {
          "action": "include",
          "keywords": [
            "🇬🇧|\\bGB\\b|英国|United Kingdom|\\bUK\\b|UnitedKingdom"
          ]
        }
      ]
    }
  ],
  "route": {
    "auto_detect_interface": true,
    "final": "Proxy",
    "rules": [
      {
        "action": "sniff"
      },
      {
        "protocol": "dns",
        "action": "hijack-dns"
      },
      {
        "rule_set": "AWAvenue-Ads",
        "outbound": "🔈 广告拦截"
      },
      {
        "type": "logical",
        "mode": "or",
        "rules": [
          {
            "port": [
              3478
            ]
          },
          {
            "network": [
              "tcp"
            ],
            "port": [
              5349
            ]
          },
          {
            "network": [
              "udp"
            ],
            "port": [
              5350,
              5351,
              19302
            ]
          },
          {
            "rule_set": "STUN"
          }
        ],
        "outbound": "💧 泄漏拦截"
      },
      {
        "rule_set": "BlockHttpDNS",
        "outbound": "🔎 HttpDNS"
      },
      {
        "ip_is_private": true,
        "outbound": "🎯 全球直连"
      },
      {
        "clash_mode": "direct",
        "outbound": "🎯 全球直连"
      },
      {
        "rule_set": [
          "geoip-google",
          "geosite-google"
        ],
        "outbound": "🔍 Google"
      },
      {
        "rule_set": "geosite-ai",
        "outbound": "🤖 AI"
      },
      {
        "rule_set": "geosite-youtube",
        "outbound": "📺 YouTube"
      },
      {
        "rule_set": "geosite-tiktok",
        "outbound": "🎥 TikTok"
      },
      {
        "rule_set": "geosite-line",
        "outbound": "🌵 Line"
      },
      {
        "rule_set": "geosite-spotify",
        "outbound": "🎵 Spotify"
      },
      {
        "rule_set": [
          "geoip-telegram",
          "geosite-telegram"
        ],
        "outbound": "📲 Telegram"
      },
      {
        "rule_set": [
          "geoip-netflix",
          "geosite-netflix"
        ],
        "outbound": "📹 Netflix"
      },
      {
        "rule_set": "geosite-microsoft",
        "outbound": "📖 Microsoft"
      },
      {
        "rule_set": [
          "geoip-apple",
          "geosite-apple"
        ],
        "outbound": "🍎 Apple"
      },
      {
        "rule_set": [
          "geoip-cn",
          "geosite-cn",
          "geosite-private"
        ],
        "outbound": "🎯 全球直连"
      }
    ],
    "rule_set": [
      {
        "tag": "AWAvenue-Ads",
        "type": "remote",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Singbox.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "STUN",
        "type": "remote",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/senshinya/singbox_ruleset/main/rule/STUN/STUN.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "BlockHttpDNS",
        "type": "remote",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/senshinya/singbox_ruleset/main/rule/BlockHttpDNS/BlockHttpDNS.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-private",
        "type": "remote",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/private.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-cn",
        "type": "remote",
        "url": "https://gh.ikuu.eu.org/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/cn.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-ai",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/category-ai-!cn.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-youtube",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/youtube.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-google",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/google.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-telegram",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/telegram.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-tiktok",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/tiktok.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-line",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/sing/geo/geosite/line.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-netflix",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/netflix.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-apple",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/apple.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-microsoft",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geosite/microsoft.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geosite-spotify",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/sing/geo/geosite/spotify.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-private",
        "type": "remote",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/private.srs",
        "format": "binary",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-google",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/google.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-telegram",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/telegram.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-netflix",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/netflix.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-apple",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/apple.srs",
        "download_detour": "🎯 全球直连"
      },
      {
        "tag": "geoip-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/cn.srs",
        "download_detour": "🎯 全球直连"
      }
    ]
  }
}
